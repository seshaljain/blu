# -*- org-hugo-section: "dsa/grind-75" -*-
* Grind 75
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:END:

** DONE Two Sum :array:hashing:easy:
CLOSED: [2022-07-17 Sun]
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: two-sum
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/two-sum

#+begin_src cpp
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int, int> mp;

        vector<int> ans(2);

        for (int i = 0; i < nums.size(); i++) {
            if (mp.find(target - nums[i]) != mp.end()) {
                ans[0] = i;
                ans[1] = mp[target-nums[i]];
            } else {
                mp.insert({nums[i], i});
            }
        }

        return ans;
    }
};
#+end_src

** DONE Valid Parentheses :stack:easy:
CLOSED: [2022-07-17 Sun]
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: valid-parentheses
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/valid-parentheses

#+begin_src cpp
class Solution {
public:
    bool isValid(string s) {
        stack<char> st;

        for (auto c: s) {
            if (c == '}' && !st.empty()) {
                if (st.top() == '{') {
                    st.pop();
                } else st.push(c);
            }
            else if (c == ')' && !st.empty()) {
                if (st.top() == '(') {
                    st.pop();
                } else st.push(c);
            }
            else if (c == ']' && !st.empty()) {
                if (st.top() == '[') {
                    st.pop();
                } else st.push(c);
            } else {
                st.push(c);
            }
        }

        return st.empty();
    }
};
#+end_src

** TODO Merge Two Sorted Lists :ll:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: merge-two-sorted-lists
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/merge-two-sorted-lists
** TODO Best Time to Buy and Sell Stock :array:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: best-time-to-buy-and-sell-stock
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/best-time-to-buy-and-sell-stock
** TODO Valid Palindrome :string:palindrome:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: valid-palindrome
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/valid-palindrome
** TODO Invert Binary Tree :bt:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: invert-binary-tree
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/invert-binary-tree
** TODO Valid Anagram :string:anagram:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: valid-anagram
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/valid-anagram
** TODO Binary Search :binarysearch:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: binarysearch
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/binarysearch
** TODO Flood Fill :graph:matrix:dfs:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: flood-fill
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/flood-fill
** TODO Maximum Subarray :dp:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: maximum-subarray
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/maximum-subarray
** TODO Lowest Common Ancestor of a Binary Search Tree :bst:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: lowest-common-ancestor-of-a-bst
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/lowest-common-ancestor-of-a-bst
** TODO Balanced Binary Tree :bt:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: balanced-binary-tree
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/balanced-binary-tree
** TODO Linked List Cycle :ll:twopointers:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: linked-list-cycle
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/linked-list-cycle
** TODO Implement Queue using Stacks :stack:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: implement-queue-using-stacks
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/implement-queue-using-stacks
** TODO First Bad Version :binarysearch:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: first-bad-version
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/first-bad-version
** TODO Ransom Note :hashtable:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: ransom-note
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/ransom-note
** TODO Climbing Stairs :dp:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: climbing-stairs
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/climbing-stairs
** TODO Longest Palindrome :string:palindrome:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: longest-palindrome
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/longest-palindrome
** TODO Reverse Linked List :ll:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: reverse-linked-list
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/reverse-linked-list
** TODO Majority Element :array:sorting:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: majority-element
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/majority-element
** TODO Add Binary :binary:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: add-binary
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/add-binary
** TODO Diameter of Binary Tree :bt:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: diameter-of-binary-tree
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/diameter-of-binary-tree
** TODO Middle of the Linked List :ll:twopointers:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: middle-of-the-linked-list
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/middle-of-the-linked-list
** TODO Maximum Depth of Binary Tree :bt:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: maximum-depth-of-binary-tree
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/maximum-depth-of-binary-tree
** TODO Contains Duplicate :array:hashtable:sorting:easy:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: contains-duplicate
:Effort: 15
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 15
:END:
https://leetcode.com/problems/contains-duplicate
** TODO Min Stack :stack:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: min-stack
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/min-stack
** TODO Insert Interval :array:interval:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: insert-interval
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/insert-interval
** TODO 01 Matrix :graph:dfs:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: 01-matrix
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/01-matrix
** TODO K Closest Points to Origin :heap:geometry:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: k-closest-points-to-origin
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/k-closest-points-to-origin
** TODO Longest Substring Without Repeating Characters :string:slidingwindow:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: longest-substring-without-repeating-characters
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/longest-substring-without-repeating-characters
** TODO 3Sum :array:twopointers:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: 3sum
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/3sum
** TODO Binary Tree Level Order Traversal :bt:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: binary-tree-level-order-traversal
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/binary-tree-level-order-traversal
** TODO Clone Graph :graph:dfs:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: clone-graph
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/clone-graph
** TODO Evaluate Reverse Polish Notation :stack:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: evaluate-reverse-polish-notation
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/evaluate-reverse-polish-notation
** TODO Course Schedule :graph:toposort:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: course-schedule
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/course-schedule
** TODO Implement Trie (Prefix Tree) :trie:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: implement-trie-prefix-tree
:Effort: 35
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 35
:END:
https://leetcode.com/problems/implement-trie-prefix-tree
** TODO Coin Change :dp:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: coin-change
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/coin-change
** TODO Product of Array Except Self :array:prefixsum:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: product-of-array-except-self
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/product-of-array-except-self
** TODO Validate Binary Search Tree :bst:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: validate-bst
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/validate-bst
** TODO Number of Islands :graph:dfs:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: number-of-islands
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/number-of-islands
** TODO Rotting Oranges :graph:dfs:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: rotting-oranges
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/rotting-oranges
** TODO Search in Rotated Sorted Array :binarysearch:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: search-in-rotated-sorted-array
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/search-in-rotated-sorted-array
** TODO Combination Sum :array:backtracking:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: combination-sum
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/combination-sum
** TODO Permutations :recursion:backtracking:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: permutations
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/permutations
** TODO Merge Intervals :array:interval:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: merge-intervals
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/merge-intervals
** TODO Lowest Common Ancestor of a Binary Tree :bt:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: lowest-common-ancestor-of-a-binary-tree
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree
** TODO Time Based Key-Value Store :binarysearch:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: time-based-key-value-store
:Effort: 35
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 35
:END:
https://leetcode.com/problems/time-based-key-value-store
** TODO Accounts Merge :graph:dfs:unionfind:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: accounts-merge
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/accounts-merge
** TODO Sort Colors :array:twopointers:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: sort-colors
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/sort-colors
** TODO Word Break :trie:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: word-break
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/word-break
** TODO Partition Equal Subset Sum :dp:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: partition-equal-subset-sum
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/partition-equal-subset-sum
** TODO String to Integer (atoi) :string:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: string-to-integer-atoi
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/string-to-integer-atoi
** TODO Spiral Matrix :matrix:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: spiral-matrix
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/spiral-matrix
** TODO Subsets :recursion:backtracking:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: subsets
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/subsets
** TODO Binary Tree Right Side View :bt:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: binary-tree-right-side-view
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/binary-tree-right-side-view
** TODO Longest Palindromic Substring :string:palindrome:twopointer:dp:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: longest-palindromic-substring
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/longest-palindromic-substring
** TODO Unique Paths :dp:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: unique-paths
:Effort: 20
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 20
:END:
https://leetcode.com/problems/unique-paths
** TODO Construct Binary Tree from Preorder and Inorder Traversal :bt:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: construct-binary-tree-from-preorder-and-inorder-traversal
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal
** TODO Container With Most Water :array:greedy:twopointers:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: container-with-most-water
:Effort: 35
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 35
:END:
https://leetcode.com/problems/container-with-most-water
** TODO Letter Combinations of a Phone Number :recursion:backtracking:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: letter-combinations-of-a-phone-number
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/letter-combinations-of-a-phone-number
** TODO Word Search :graph:backtracking:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: word-search
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/word-search
** TODO Find All Anagrams in a String :string:anagram:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: find-all-anagrams-in-a-string
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/find-all-anagrams-in-a-string
** TODO Minimum Height Trees :graph:toposort:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: minimum-height-trees
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/minimum-height-trees
** TODO Task Scheduler :heap:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: task-scheduler
:Effort: 35
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 35
:END:
https://leetcode.com/problems/task-scheduler
** TODO LRU Cache :ll:hashtable:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: lru-cache
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/lru-cache
** TODO Kth Smallest Element in a BST :bst:medium:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: kth-smallest-element-in-a-bst
:Effort: 25
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 25
:END:
https://leetcode.com/problems/kth-smallest-element-in-a-bst
** TODO Minimum Window Substring :string:slidingwindow:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: minimum-window-substring
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/minimum-window-substring
** TODO Serialize and Deserialize Binary Tree :bt:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: serialize-and-deserialize-binary-tree
:Effort: 40
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 40
:END:
https://leetcode.com/problems/serialize-and-deserialize-binary-tree
** TODO Trapping Rain Water :stack:monotonicstack:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: trapping-rain-water
:Effort: 35
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 35
:END:
https://leetcode.com/problems/trapping-rain-water
** TODO Find Median from Data Stream :heap:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: find-median-from-data-stream
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/find-median-from-data-stream
** TODO Word Ladder :graph:dfs:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: word-ladder
:Effort: 45
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 45
:END:
https://leetcode.com/problems/word-ladder
** TODO Basic Calculator :stack:parsing:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: basic-calculator
:Effort: 40
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 40
:END:
https://leetcode.com/problems/basic-calculator
** TODO Maximum Profit in Job Scheduling :binarysearch:dp:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: maximum-profit-in-job-scheduling
:Effort: 45
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 45
:END:
https://leetcode.com/problems/maximum-profit-in-job-scheduling
** TODO Merge k Sorted Lists :heap:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: merge-k-sorted-lists
:Effort: 30
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 30
:END:
https://leetcode.com/problems/merge-k-sorted-lists
** TODO Largest Rectangle in Histogram :stack:monoticstack:hard:
:PROPERTIES:
:EXPORT_HUGO_WEIGHT: auto
:EXPORT_FILE_NAME: largest-rectangle-in-histogram
:Effort: 35
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :duration 35
:END:
https://leetcode.com/problems/largest-rectangle-in-histogram
